name: build-tvbox

on:
  workflow_dispatch:
    inputs:
      rebuild:
        description: '忽略构建记录以重新构建'
        required: false
        type: boolean
      donotpublish:
        description: '构建后不提交发布新版'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: q215613905
            repoName: TVBoxOS
            branchName: main
            jdkVersion: 11
          - userName: takagen99
            repoName: Box
            branchName: main
            jdkVersion: 17
          - userName: FongMi
            repoName: TV
            branchName: release
            jdkVersion: 17

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdkVersion }}
          cache: 'gradle'

      - name: Restore Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Check New Commit
        run: |
          upStream=https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL $upStream/commits/${{ matrix.branchName }} | grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" | head -1 | cut -d/ -f5)
          if [[ -z "$commit" ]]; then
            commit=$(curl -s "https://api.github.com/repos/${{ matrix.userName }}/${{ matrix.repoName }}/commits/${{ matrix.branchName }}?per_page=1" | jq -r '.sha')
          fi
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
          fi

      - name: Checkout Source Code
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} TVBoxOSC
          cd TVBoxOSC
          git checkout ${{ env.commit }}

      - name: Modify Build Configurations
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          sed -i '/mavenCentral()/a\        maven { url "https://jitpack.io" }' build.gradle

      - name: Build APK
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease --build-cache --parallel --daemon --warning-mode all

      - name: Collect APK
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          mkdir -p apk
          find app/build/outputs/apk/release -type f -name "*.apk" -exec cp {} apk/ \;

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        if: ${{ env.commit }}
        with:
          name: tvbox-apk
          path: TVBoxOSC/apk/*.apk

      - name: Generate Release Notes
        if: ${{ env.commit }}
        working-directory: TVBoxOSC
        run: |
          echo "Latest build from commit $(git rev-parse --short HEAD)" > release_notes.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: ${{ env.commit }}
        with:
          files: TVBoxOSC/apk/*.apk
          body_path: TVBoxOSC/release_notes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
